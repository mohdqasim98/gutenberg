"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[1515],{"./packages/components/src/notice/stories/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},WithCustomSpokenMessage:function(){return WithCustomSpokenMessage}});var ___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/notice/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Components/Notice",component:___WEBPACK_IMPORTED_MODULE_1__.Z,argTypes:{isDismissible:{control:"boolean"},onDismiss:{control:{type:null}},onRemove:{control:{type:null}},politeness:{control:"radio",options:["assertive","polite"]},spokenMessage:{control:"text"},status:{control:"radio",options:["warning","success","error","info"]}},parameters:{sourceLink:"packages/components/src/notice",storySource:{source:"/**\n * Internal dependencies\n */\nimport Notice from '../';\n\n// TODO: Add a story involving NoticeList to help people understand\n// the difference between onDismiss/onRemove.\n\nexport default {\n\ttitle: 'Components/Notice',\n\tcomponent: Notice,\n\targTypes: {\n\t\tisDismissible: { control: 'boolean' },\n\t\tonDismiss: { control: { type: null } },\n\t\tonRemove: { control: { type: null } },\n\t\tpoliteness: {\n\t\t\tcontrol: 'radio',\n\t\t\toptions: [ 'assertive', 'polite' ],\n\t\t},\n\t\tspokenMessage: { control: 'text' },\n\t\tstatus: {\n\t\t\tcontrol: 'radio',\n\t\t\toptions: [ 'warning', 'success', 'error', 'info' ],\n\t\t},\n\t},\n\tparameters: {\n\t\tcontrols: { expanded: true },\n\t\tdocs: { source: { state: 'open' } },\n\t},\n};\n\nconst Template = ( props ) => {\n\treturn <Notice { ...props } />;\n};\n\nexport const Default = Template.bind( {} );\nDefault.args = {\n\tchildren: 'This is a notice.',\n};\n\nexport const WithCustomSpokenMessage = Template.bind( {} );\nWithCustomSpokenMessage.args = {\n\t...Default.args,\n\tpoliteness: 'assertive',\n\tspokenMessage: 'This is a notice with a custom spoken message',\n};\n",locationsMap:{default:{startLoc:{col:17,line:32},endLoc:{col:1,line:34},startBody:{col:17,line:32},endBody:{col:1,line:34}},"with-custom-spoken-message":{startLoc:{col:17,line:32},endLoc:{col:1,line:34},startBody:{col:17,line:32},endBody:{col:1,line:34}}}},controls:{expanded:!0},docs:{source:{state:"open"}}}};const Template=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.Z,{...props});Template.displayName="Template";const Default=Template.bind({});Default.args={children:"This is a notice."};const WithCustomSpokenMessage=Template.bind({});WithCustomSpokenMessage.args={...Default.args,politeness:"assertive",spokenMessage:"This is a notice with a custom spoken message"}}}]);